ID =-1
Program State 
Execution Stack = 
Ref(integer) a
v = 10
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
integer v

Symbol Table = 


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{}

ID =-1
Program State 
Execution Stack = 
Ref(integer) a
v = 10
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))


Symbol Table = 
v=0


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{}

ID =-1
Program State 
Execution Stack = 
v = 10
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
Ref(integer) a

Symbol Table = 
v=0


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{}

ID =-1
Program State 
Execution Stack = 
v = 10
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))


Symbol Table = 
a=(0, integer)
v=0


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{}

ID =-1
Program State 
Execution Stack = 
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
v = 10

Symbol Table = 
a=(0, integer)
v=0


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{}

ID =-1
Program State 
Execution Stack = 
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))


Symbol Table = 
a=(0, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{}

ID =-1
Program State 
Execution Stack = 
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))new(a, 22)

Symbol Table = 
a=(0, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{}

ID =-1
Program State 
Execution Stack = 
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{1=22}

ID =-1
Program State 
Execution Stack = 


Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{1=22}

ID =0
Program State 
Execution Stack = 
wH(a, 30)
v = 32
print(v)
print(rH(a))


Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =0
Program State 
Execution Stack = 
v = 32
print(v)
print(rH(a))
wH(a, 30)

Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =0
Program State 
Execution Stack = 
v = 32
print(v)
print(rH(a))


Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =0
Program State 
Execution Stack = 
print(v)
print(rH(a))
v = 32

Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =0
Program State 
Execution Stack = 
print(v)
print(rH(a))


Symbol Table = 
a=(1, integer)
v=32


Output = 


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =0
Program State 
Execution Stack = 
print(rH(a))print(v)

Symbol Table = 
a=(1, integer)
v=32


Output = 


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =0
Program State 
Execution Stack = 
print(rH(a))

Symbol Table = 
a=(1, integer)
v=32


Output = 
32


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =0
Program State 
Execution Stack = 


Symbol Table = 
a=(1, integer)
v=32


Output = 
32
30


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =1
Program State 
Execution Stack = 
Ref(integer) a
v = 10
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
integer v

Symbol Table = 


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
Ref(integer) a
v = 10
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))


Symbol Table = 
v=0


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
v = 10
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
Ref(integer) a

Symbol Table = 
v=0


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
v = 10
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))


Symbol Table = 
a=(0, integer)
v=0


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
v = 10

Symbol Table = 
a=(0, integer)
v=0


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))


Symbol Table = 
a=(0, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))new(a, 22)

Symbol Table = 
a=(0, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{1=22}

ID =1
Program State 
Execution Stack = 


Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{1=22}

ID =2
Program State 
Execution Stack = 
wH(a, 30)
v = 32
print(v)
print(rH(a))


Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =2
Program State 
Execution Stack = 
v = 32
print(v)
print(rH(a))
wH(a, 30)

Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =2
Program State 
Execution Stack = 
v = 32
print(v)
print(rH(a))


Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =2
Program State 
Execution Stack = 
print(v)
print(rH(a))
v = 32

Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =2
Program State 
Execution Stack = 
print(v)
print(rH(a))


Symbol Table = 
a=(1, integer)
v=32


Output = 


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =2
Program State 
Execution Stack = 
print(rH(a))print(v)

Symbol Table = 
a=(1, integer)
v=32


Output = 


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =2
Program State 
Execution Stack = 
print(rH(a))

Symbol Table = 
a=(1, integer)
v=32


Output = 
32


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =2
Program State 
Execution Stack = 


Symbol Table = 
a=(1, integer)
v=32


Output = 
32
30


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =1
Program State 
Execution Stack = 
Ref(integer) a
v = 10
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
integer v

Symbol Table = 


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
Ref(integer) a
v = 10
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))


Symbol Table = 
v=0


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
v = 10
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
Ref(integer) a

Symbol Table = 
v=0


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
v = 10
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))


Symbol Table = 
a=(0, integer)
v=0


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
v = 10

Symbol Table = 
a=(0, integer)
v=0


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))


Symbol Table = 
a=(0, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))new(a, 22)

Symbol Table = 
a=(0, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{1=22}

ID =1
Program State 
Execution Stack = 


Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{1=22}

ID =2
Program State 
Execution Stack = 
wH(a, 30)
v = 32
print(v)
print(rH(a))


Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =2
Program State 
Execution Stack = 
v = 32
print(v)
print(rH(a))
wH(a, 30)

Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =2
Program State 
Execution Stack = 
v = 32
print(v)
print(rH(a))


Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =2
Program State 
Execution Stack = 
print(v)
print(rH(a))
v = 32

Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =2
Program State 
Execution Stack = 
print(v)
print(rH(a))


Symbol Table = 
a=(1, integer)
v=32


Output = 


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =2
Program State 
Execution Stack = 
print(rH(a))print(v)

Symbol Table = 
a=(1, integer)
v=32


Output = 


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =2
Program State 
Execution Stack = 
print(rH(a))

Symbol Table = 
a=(1, integer)
v=32


Output = 
32


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =2
Program State 
Execution Stack = 


Symbol Table = 
a=(1, integer)
v=32


Output = 
32
30


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =1
Program State 
Execution Stack = 
Ref(integer) a
v = 10
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
integer v

Symbol Table = 


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
Ref(integer) a
v = 10
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))


Symbol Table = 
v=0


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
v = 10
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
Ref(integer) a

Symbol Table = 
v=0


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
v = 10
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))


Symbol Table = 
a=(0, integer)
v=0


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
v = 10

Symbol Table = 
a=(0, integer)
v=0


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))


Symbol Table = 
a=(0, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))new(a, 22)

Symbol Table = 
a=(0, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{1=22}

ID =1
Program State 
Execution Stack = 


Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{1=22}

ID =2
Program State 
Execution Stack = 
wH(a, 30)
v = 32
print(v)
print(rH(a))


Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =2
Program State 
Execution Stack = 
v = 32
print(v)
print(rH(a))
wH(a, 30)

Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =2
Program State 
Execution Stack = 
v = 32
print(v)
print(rH(a))


Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =2
Program State 
Execution Stack = 
print(v)
print(rH(a))
v = 32

Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =2
Program State 
Execution Stack = 
print(v)
print(rH(a))


Symbol Table = 
a=(1, integer)
v=32


Output = 


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =2
Program State 
Execution Stack = 
print(rH(a))print(v)

Symbol Table = 
a=(1, integer)
v=32


Output = 


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =2
Program State 
Execution Stack = 
print(rH(a))

Symbol Table = 
a=(1, integer)
v=32


Output = 
32


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =2
Program State 
Execution Stack = 


Symbol Table = 
a=(1, integer)
v=32


Output = 
32
30


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =1
Program State 
Execution Stack = 
Ref(integer) a
v = 10
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
integer v

Symbol Table = 


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
Ref(integer) a
v = 10
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))


Symbol Table = 
v=0


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
v = 10
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
Ref(integer) a

Symbol Table = 
v=0


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
v = 10
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))


Symbol Table = 
a=(0, integer)
v=0


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
v = 10

Symbol Table = 
a=(0, integer)
v=0


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))


Symbol Table = 
a=(0, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))new(a, 22)

Symbol Table = 
a=(0, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{1=22}

ID =1
Program State 
Execution Stack = 


Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{1=22}

ID =3
Program State 
Execution Stack = 
wH(a, 30)
v = 32
print(v)
print(rH(a))


Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =3
Program State 
Execution Stack = 
v = 32
print(v)
print(rH(a))
wH(a, 30)

Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =3
Program State 
Execution Stack = 
v = 32
print(v)
print(rH(a))


Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =3
Program State 
Execution Stack = 
print(v)
print(rH(a))
v = 32

Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =3
Program State 
Execution Stack = 
print(v)
print(rH(a))


Symbol Table = 
a=(1, integer)
v=32


Output = 


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =3
Program State 
Execution Stack = 
print(rH(a))print(v)

Symbol Table = 
a=(1, integer)
v=32


Output = 


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =3
Program State 
Execution Stack = 
print(rH(a))

Symbol Table = 
a=(1, integer)
v=32


Output = 
32


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =3
Program State 
Execution Stack = 


Symbol Table = 
a=(1, integer)
v=32


Output = 
32
30


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =1
Program State 
Execution Stack = 
Ref(integer) a
v = 10
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
integer v

Symbol Table = 


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
Ref(integer) a
v = 10
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))


Symbol Table = 
v=0


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
v = 10
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
Ref(integer) a

Symbol Table = 
v=0


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
v = 10
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))


Symbol Table = 
a=(0, integer)
v=0


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
v = 10

Symbol Table = 
a=(0, integer)
v=0


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))


Symbol Table = 
a=(0, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))new(a, 22)

Symbol Table = 
a=(0, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{1=22}

ID =1
Program State 
Execution Stack = 


Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{1=22}

ID =3
Program State 
Execution Stack = 
wH(a, 30)
v = 32
print(v)
print(rH(a))


Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =3
Program State 
Execution Stack = 
v = 32
print(v)
print(rH(a))
wH(a, 30)

Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =3
Program State 
Execution Stack = 
v = 32
print(v)
print(rH(a))


Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =3
Program State 
Execution Stack = 
print(v)
print(rH(a))
v = 32

Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =3
Program State 
Execution Stack = 
print(v)
print(rH(a))


Symbol Table = 
a=(1, integer)
v=32


Output = 


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =3
Program State 
Execution Stack = 
print(rH(a))print(v)

Symbol Table = 
a=(1, integer)
v=32


Output = 


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =3
Program State 
Execution Stack = 
print(rH(a))

Symbol Table = 
a=(1, integer)
v=32


Output = 
32


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =3
Program State 
Execution Stack = 


Symbol Table = 
a=(1, integer)
v=32


Output = 
32
30


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =1
Program State 
Execution Stack = 
Ref(integer) a
v = 10
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
integer v

Symbol Table = 


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
Ref(integer) a
v = 10
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))


Symbol Table = 
v=0


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
v = 10
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
Ref(integer) a

Symbol Table = 
v=0


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
v = 10
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))


Symbol Table = 
a=(0, integer)
v=0


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
v = 10

Symbol Table = 
a=(0, integer)
v=0


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))


Symbol Table = 
a=(0, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))new(a, 22)

Symbol Table = 
a=(0, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{1=22}

ID =1
Program State 
Execution Stack = 


Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

File table = 


Heap = 
{1=22}

ID =2
Program State 
Execution Stack = 
wH(a, 30)
v = 32
print(v)
print(rH(a))


Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =2
Program State 
Execution Stack = 
v = 32
print(v)
print(rH(a))
wH(a, 30)

Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =2
Program State 
Execution Stack = 
v = 32
print(v)
print(rH(a))


Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =2
Program State 
Execution Stack = 
print(v)
print(rH(a))
v = 32

Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =2
Program State 
Execution Stack = 
print(v)
print(rH(a))


Symbol Table = 
a=(1, integer)
v=32


Output = 


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =2
Program State 
Execution Stack = 
print(rH(a))print(v)

Symbol Table = 
a=(1, integer)
v=32


Output = 


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =2
Program State 
Execution Stack = 
print(rH(a))

Symbol Table = 
a=(1, integer)
v=32


Output = 
32


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =2
Program State 
Execution Stack = 


Symbol Table = 
a=(1, integer)
v=32


Output = 
32
30


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =1
Program State 
Execution Stack = 
Ref(integer) a
v = 10
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
print(v)
print(rH(a))
integer v

Symbol Table = 


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
Ref(integer) a
v = 10
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
print(v)
print(rH(a))


Symbol Table = 
v=0


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
v = 10
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
print(v)
print(rH(a))
Ref(integer) a

Symbol Table = 
v=0


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
v = 10
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
print(v)
print(rH(a))


Symbol Table = 
a=(0, integer)
v=0


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
print(v)
print(rH(a))
v = 10

Symbol Table = 
a=(0, integer)
v=0


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
print(v)
print(rH(a))


Symbol Table = 
a=(0, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
print(v)
print(rH(a))
new(a, 22)

Symbol Table = 
a=(0, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
print(v)
print(rH(a))


Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =1
Program State 
Execution Stack = 
print(v)
print(rH(a))
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =1
Program State 
Execution Stack = 
print(v)
print(rH(a))


Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =2
Program State 
Execution Stack = 
wH(a, 30)
v = 32
print(v)
print(rH(a))


Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =1
Program State 
Execution Stack = 
print(rH(a))print(v)

Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =2
Program State 
Execution Stack = 
v = 32
print(v)
print(rH(a))
wH(a, 30)

Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =1
Program State 
Execution Stack = 
print(rH(a))

Symbol Table = 
a=(1, integer)
v=10


Output = 
10


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =2
Program State 
Execution Stack = 
v = 32
print(v)
print(rH(a))


Symbol Table = 
a=(1, integer)
v=10


Output = 
10


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =1
Program State 
Execution Stack = 


Symbol Table = 
a=(1, integer)
v=10


Output = 
10
30


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =2
Program State 
Execution Stack = 
print(v)
print(rH(a))
v = 32

Symbol Table = 
a=(1, integer)
v=10


Output = 
10
30


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =2
Program State 
Execution Stack = 
print(v)
print(rH(a))


Symbol Table = 
a=(1, integer)
v=32


Output = 
10
30


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =2
Program State 
Execution Stack = 
print(rH(a))print(v)

Symbol Table = 
a=(1, integer)
v=32


Output = 
10
30


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =2
Program State 
Execution Stack = 
print(rH(a))

Symbol Table = 
a=(1, integer)
v=32


Output = 
10
30
32


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =2
Program State 
Execution Stack = 


Symbol Table = 
a=(1, integer)
v=32


Output = 
10
30
32
30


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =1
Program State 
Execution Stack = 
Ref(integer) a
v = 10
new(a, 22)
fork(v = 32 ; print(v) ; print(rH(a)))
print(v)
print(rH(a))
integer v

Symbol Table = 


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
Ref(integer) a
v = 10
new(a, 22)
fork(v = 32 ; print(v) ; print(rH(a)))
print(v)
print(rH(a))


Symbol Table = 
v=0


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
v = 10
new(a, 22)
fork(v = 32 ; print(v) ; print(rH(a)))
print(v)
print(rH(a))
Ref(integer) a

Symbol Table = 
v=0


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
v = 10
new(a, 22)
fork(v = 32 ; print(v) ; print(rH(a)))
print(v)
print(rH(a))


Symbol Table = 
a=(0, integer)
v=0


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
new(a, 22)
fork(v = 32 ; print(v) ; print(rH(a)))
print(v)
print(rH(a))
v = 10

Symbol Table = 
a=(0, integer)
v=0


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
new(a, 22)
fork(v = 32 ; print(v) ; print(rH(a)))
print(v)
print(rH(a))


Symbol Table = 
a=(0, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
fork(v = 32 ; print(v) ; print(rH(a)))
print(v)
print(rH(a))
new(a, 22)

Symbol Table = 
a=(0, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
fork(v = 32 ; print(v) ; print(rH(a)))
print(v)
print(rH(a))


Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =1
Program State 
Execution Stack = 
print(v)
print(rH(a))
fork(v = 32 ; print(v) ; print(rH(a)))

Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =1
Program State 
Execution Stack = 
print(v)
print(rH(a))


Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =2
Program State 
Execution Stack = 
v = 32
print(v)
print(rH(a))


Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =1
Program State 
Execution Stack = 
print(rH(a))print(v)

Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =2
Program State 
Execution Stack = 
print(v)
print(rH(a))
v = 32

Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =1
Program State 
Execution Stack = 
print(rH(a))

Symbol Table = 
a=(1, integer)
v=10


Output = 
10


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =2
Program State 
Execution Stack = 
print(v)
print(rH(a))


Symbol Table = 
a=(1, integer)
v=32


Output = 
10


Initial program = 
v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =1
Program State 
Execution Stack = 


Symbol Table = 
a=(1, integer)
v=10


Output = 
10
22


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =2
Program State 
Execution Stack = 
print(rH(a))print(v)

Symbol Table = 
a=(1, integer)
v=32


Output = 
10
22


Initial program = 
v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =2
Program State 
Execution Stack = 
print(rH(a))

Symbol Table = 
a=(1, integer)
v=32


Output = 
10
22
32


Initial program = 
v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =2
Program State 
Execution Stack = 


Symbol Table = 
a=(1, integer)
v=32


Output = 
10
22
32
22


Initial program = 
v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =1
Program State 
Execution Stack = 
Ref(integer) a
v = 10
new(a, 22)
fork(wH(a, 30) ; print(v) ; print(rH(a)))
print(v)
print(rH(a))
integer v

Symbol Table = 


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
Ref(integer) a
v = 10
new(a, 22)
fork(wH(a, 30) ; print(v) ; print(rH(a)))
print(v)
print(rH(a))


Symbol Table = 
v=0


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
v = 10
new(a, 22)
fork(wH(a, 30) ; print(v) ; print(rH(a)))
print(v)
print(rH(a))
Ref(integer) a

Symbol Table = 
v=0


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
v = 10
new(a, 22)
fork(wH(a, 30) ; print(v) ; print(rH(a)))
print(v)
print(rH(a))


Symbol Table = 
a=(0, integer)
v=0


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
new(a, 22)
fork(wH(a, 30) ; print(v) ; print(rH(a)))
print(v)
print(rH(a))
v = 10

Symbol Table = 
a=(0, integer)
v=0


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
new(a, 22)
fork(wH(a, 30) ; print(v) ; print(rH(a)))
print(v)
print(rH(a))


Symbol Table = 
a=(0, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
fork(wH(a, 30) ; print(v) ; print(rH(a)))
print(v)
print(rH(a))
new(a, 22)

Symbol Table = 
a=(0, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
fork(wH(a, 30) ; print(v) ; print(rH(a)))
print(v)
print(rH(a))


Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =1
Program State 
Execution Stack = 
print(v)
print(rH(a))
fork(wH(a, 30) ; print(v) ; print(rH(a)))

Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =1
Program State 
Execution Stack = 
print(v)
print(rH(a))


Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =2
Program State 
Execution Stack = 
wH(a, 30)
print(v)
print(rH(a))


Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
wH(a, 30) ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =1
Program State 
Execution Stack = 
print(rH(a))print(v)

Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =2
Program State 
Execution Stack = 
print(v)
print(rH(a))
wH(a, 30)

Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
wH(a, 30) ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =1
Program State 
Execution Stack = 
print(rH(a))

Symbol Table = 
a=(1, integer)
v=10


Output = 
10


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =2
Program State 
Execution Stack = 
print(v)
print(rH(a))


Symbol Table = 
a=(1, integer)
v=10


Output = 
10


Initial program = 
wH(a, 30) ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =1
Program State 
Execution Stack = 


Symbol Table = 
a=(1, integer)
v=10


Output = 
10
30


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =2
Program State 
Execution Stack = 
print(rH(a))print(v)

Symbol Table = 
a=(1, integer)
v=10


Output = 
10
30


Initial program = 
wH(a, 30) ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =2
Program State 
Execution Stack = 
print(rH(a))

Symbol Table = 
a=(1, integer)
v=10


Output = 
10
30
10


Initial program = 
wH(a, 30) ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =2
Program State 
Execution Stack = 


Symbol Table = 
a=(1, integer)
v=10


Output = 
10
30
10
30


Initial program = 
wH(a, 30) ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =1
Program State 
Execution Stack = 
Ref(integer) a
v = 10
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
print(v)
print(rH(a))
integer v

Symbol Table = 


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
Ref(integer) a
v = 10
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
print(v)
print(rH(a))


Symbol Table = 
v=0


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
v = 10
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
print(v)
print(rH(a))
Ref(integer) a

Symbol Table = 
v=0


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
v = 10
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
print(v)
print(rH(a))


Symbol Table = 
a=(0, integer)
v=0


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
print(v)
print(rH(a))
v = 10

Symbol Table = 
a=(0, integer)
v=0


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
print(v)
print(rH(a))


Symbol Table = 
a=(0, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
print(v)
print(rH(a))
new(a, 22)

Symbol Table = 
a=(0, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
print(v)
print(rH(a))


Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =1
Program State 
Execution Stack = 
print(v)
print(rH(a))
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =1
Program State 
Execution Stack = 
print(v)
print(rH(a))


Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =2
Program State 
Execution Stack = 
wH(a, 30)
v = 32
print(v)
print(rH(a))


Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =1
Program State 
Execution Stack = 
print(rH(a))print(v)

Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =2
Program State 
Execution Stack = 
v = 32
print(v)
print(rH(a))
wH(a, 30)

Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =1
Program State 
Execution Stack = 
print(rH(a))

Symbol Table = 
a=(1, integer)
v=10


Output = 
10


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =2
Program State 
Execution Stack = 
v = 32
print(v)
print(rH(a))


Symbol Table = 
a=(1, integer)
v=10


Output = 
10


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =1
Program State 
Execution Stack = 


Symbol Table = 
a=(1, integer)
v=10


Output = 
10
30


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =2
Program State 
Execution Stack = 
print(v)
print(rH(a))
v = 32

Symbol Table = 
a=(1, integer)
v=10


Output = 
10
30


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =2
Program State 
Execution Stack = 
print(v)
print(rH(a))


Symbol Table = 
a=(1, integer)
v=32


Output = 
10
30


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =2
Program State 
Execution Stack = 
print(rH(a))print(v)

Symbol Table = 
a=(1, integer)
v=32


Output = 
10
30


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =2
Program State 
Execution Stack = 
print(rH(a))

Symbol Table = 
a=(1, integer)
v=32


Output = 
10
30
32


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =2
Program State 
Execution Stack = 


Symbol Table = 
a=(1, integer)
v=32


Output = 
10
30
32
30


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =1
Program State 
Execution Stack = 
Ref(integer) a
v = 10
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
print(v)
print(rH(a))
integer v

Symbol Table = 


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
Ref(integer) a
v = 10
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
print(v)
print(rH(a))


Symbol Table = 
v=0


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
v = 10
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
print(v)
print(rH(a))
Ref(integer) a

Symbol Table = 
v=0


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
v = 10
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
print(v)
print(rH(a))


Symbol Table = 
a=(0, integer)
v=0


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
print(v)
print(rH(a))
v = 10

Symbol Table = 
a=(0, integer)
v=0


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
print(v)
print(rH(a))


Symbol Table = 
a=(0, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
print(v)
print(rH(a))
new(a, 22)

Symbol Table = 
a=(0, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
print(v)
print(rH(a))


Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =1
Program State 
Execution Stack = 
print(v)
print(rH(a))
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =1
Program State 
Execution Stack = 
print(v)
print(rH(a))


Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =2
Program State 
Execution Stack = 
wH(a, 30)
v = 32
print(v)
print(rH(a))


Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =1
Program State 
Execution Stack = 
print(rH(a))print(v)

Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =2
Program State 
Execution Stack = 
v = 32
print(v)
print(rH(a))
wH(a, 30)

Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =1
Program State 
Execution Stack = 
print(rH(a))

Symbol Table = 
a=(1, integer)
v=10


Output = 
10


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =2
Program State 
Execution Stack = 
v = 32
print(v)
print(rH(a))


Symbol Table = 
a=(1, integer)
v=10


Output = 
10


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =1
Program State 
Execution Stack = 


Symbol Table = 
a=(1, integer)
v=10


Output = 
10
30


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =2
Program State 
Execution Stack = 
print(v)
print(rH(a))
v = 32

Symbol Table = 
a=(1, integer)
v=10


Output = 
10
30


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =2
Program State 
Execution Stack = 
print(v)
print(rH(a))


Symbol Table = 
a=(1, integer)
v=32


Output = 
10
30


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =2
Program State 
Execution Stack = 
print(rH(a))print(v)

Symbol Table = 
a=(1, integer)
v=32


Output = 
10
30


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =2
Program State 
Execution Stack = 
print(rH(a))

Symbol Table = 
a=(1, integer)
v=32


Output = 
10
30
32


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =2
Program State 
Execution Stack = 


Symbol Table = 
a=(1, integer)
v=32


Output = 
10
30
32
30


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =1
Program State 
Execution Stack = 
Ref(integer) a
v = 10
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
print(v)
print(rH(a))
integer v

Symbol Table = 


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
Ref(integer) a
v = 10
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
print(v)
print(rH(a))


Symbol Table = 
v=0


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
v = 10
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
print(v)
print(rH(a))
Ref(integer) a

Symbol Table = 
v=0


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
v = 10
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
print(v)
print(rH(a))


Symbol Table = 
a=(0, integer)
v=0


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
print(v)
print(rH(a))
v = 10

Symbol Table = 
a=(0, integer)
v=0


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
print(v)
print(rH(a))


Symbol Table = 
a=(0, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
print(v)
print(rH(a))
new(a, 22)

Symbol Table = 
a=(0, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
print(v)
print(rH(a))


Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =1
Program State 
Execution Stack = 
print(v)
print(rH(a))
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =1
Program State 
Execution Stack = 
print(v)
print(rH(a))


Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =2
Program State 
Execution Stack = 
wH(a, 30)
v = 32
print(v)
print(rH(a))


Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =1
Program State 
Execution Stack = 
print(rH(a))print(v)

Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =2
Program State 
Execution Stack = 
v = 32
print(v)
print(rH(a))
wH(a, 30)

Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =1
Program State 
Execution Stack = 
print(rH(a))

Symbol Table = 
a=(1, integer)
v=10


Output = 
10


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =2
Program State 
Execution Stack = 
v = 32
print(v)
print(rH(a))


Symbol Table = 
a=(1, integer)
v=10


Output = 
10


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =1
Program State 
Execution Stack = 


Symbol Table = 
a=(1, integer)
v=10


Output = 
10
30


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =2
Program State 
Execution Stack = 
print(v)
print(rH(a))
v = 32

Symbol Table = 
a=(1, integer)
v=10


Output = 
10
30


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =2
Program State 
Execution Stack = 
print(v)
print(rH(a))


Symbol Table = 
a=(1, integer)
v=32


Output = 
10
30


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =2
Program State 
Execution Stack = 
print(rH(a))print(v)

Symbol Table = 
a=(1, integer)
v=32


Output = 
10
30


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =2
Program State 
Execution Stack = 
print(rH(a))

Symbol Table = 
a=(1, integer)
v=32


Output = 
10
30
32


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =2
Program State 
Execution Stack = 


Symbol Table = 
a=(1, integer)
v=32


Output = 
10
30
32
30


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =1
Program State 
Execution Stack = 
Ref(integer) a
v = 10
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
print(v)
print(rH(a))
integer v

Symbol Table = 


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
Ref(integer) a
v = 10
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
print(v)
print(rH(a))


Symbol Table = 
v=0


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
v = 10
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
print(v)
print(rH(a))
Ref(integer) a

Symbol Table = 
v=0


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
v = 10
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
print(v)
print(rH(a))


Symbol Table = 
a=(0, integer)
v=0


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
print(v)
print(rH(a))
v = 10

Symbol Table = 
a=(0, integer)
v=0


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
new(a, 22)
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
print(v)
print(rH(a))


Symbol Table = 
a=(0, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
print(v)
print(rH(a))
new(a, 22)

Symbol Table = 
a=(0, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{}

ID =1
Program State 
Execution Stack = 
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))
print(v)
print(rH(a))


Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =1
Program State 
Execution Stack = 
print(v)
print(rH(a))
fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a)))

Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =1
Program State 
Execution Stack = 
print(v)
print(rH(a))


Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =2
Program State 
Execution Stack = 
wH(a, 30)
v = 32
print(v)
print(rH(a))


Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =1
Program State 
Execution Stack = 
print(rH(a))print(v)

Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =2
Program State 
Execution Stack = 
v = 32
print(v)
print(rH(a))
wH(a, 30)

Symbol Table = 
a=(1, integer)
v=10


Output = 


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=22}

ID =1
Program State 
Execution Stack = 
print(rH(a))

Symbol Table = 
a=(1, integer)
v=10


Output = 
10


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =2
Program State 
Execution Stack = 
v = 32
print(v)
print(rH(a))


Symbol Table = 
a=(1, integer)
v=10


Output = 
10


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =1
Program State 
Execution Stack = 


Symbol Table = 
a=(1, integer)
v=10


Output = 
10
30


Initial program = 
integer v ; Ref(integer) a ; v = 10 ; new(a, 22) ; fork(wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))) ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =2
Program State 
Execution Stack = 
print(v)
print(rH(a))
v = 32

Symbol Table = 
a=(1, integer)
v=10


Output = 
10
30


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =2
Program State 
Execution Stack = 
print(v)
print(rH(a))


Symbol Table = 
a=(1, integer)
v=32


Output = 
10
30


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =2
Program State 
Execution Stack = 
print(rH(a))print(v)

Symbol Table = 
a=(1, integer)
v=32


Output = 
10
30


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =2
Program State 
Execution Stack = 
print(rH(a))

Symbol Table = 
a=(1, integer)
v=32


Output = 
10
30
32


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

ID =2
Program State 
Execution Stack = 


Symbol Table = 
a=(1, integer)
v=32


Output = 
10
30
32
30


Initial program = 
wH(a, 30) ; v = 32 ; print(v) ; print(rH(a))

File table = 


Heap = 
{1=30}

